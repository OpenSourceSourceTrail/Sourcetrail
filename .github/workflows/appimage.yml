name: Build AppImage

on:
  workflow_dispatch:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

jobs:
  build:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: "true"

      - name: Get tags
        run: git fetch --tags origin

      - name: Install dependencies
        run: sudo apt install -y gcc g++ ninja-build python3-pip

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          aqtversion: '==3.2.*'
          dir: '${{github.workspace}}/Qt/'
          install-deps: 'true'
          version: '6.8.2'
          host: 'linux'
          target: 'desktop'
          arch: 'linux_gcc_64'
          modules: 'qt5compat'
          archives: 'icu qtbase qtdeclarative qtsvg'
          cache: 'true'
          cache-key-prefix: 'install-qt-action-linux'

      - name: Install AppImage tools
        run: |
          sudo apt-get install -y \
            libfuse2 \
            desktop-file-utils \
            librsvg2-dev
          wget -O ${{github.workspace}}/linuxdeploy-x86_64.AppImage https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
          wget -O ${{github.workspace}}/linuxdeploy-plugin-qt-x86_64.AppImage https://github.com/linuxdeploy/linuxdeploy-plugin-qt/releases/download/continuous/linuxdeploy-plugin-qt-x86_64.AppImage
          chmod +x ${{github.workspace}}/linuxdeploy*.AppImage

      - name: Install conan
        run: |
          python3 -m venv venv
          source venv/bin/activate
          pip install conan

      - name: Cache Conan packages
        uses: actions/cache@v4
        with:
          path: ~/.conan2
          key: conan-ubuntu-24.04-gnu-${{ hashFiles('**/conanfile.txt') }}

      - name: Install conan dependencies
        run: |
          source venv/bin/activate
          conan install . -s build_type=Release -of .conan/gcc --build=missing -pr:a .conan/gcc/profile

      - name: Download llvm build cache
        uses: actions/download-artifact@v4
        with:
          name: clang-19.1.7-linux
          path: ${{github.workspace}}/external
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: 13795569336 # TODO(Hussein): Need to be fixed

      - name: Install llvm
        run: tar -xvf ${{github.workspace}}/external/clang-19.1.7-linux.tar.gz -C ${{github.workspace}}/external

      - name: Configure CMake
        run: cmake --preset="ci_gnu_release_build_cxx"

      - name: Build
        run: cmake --build ${{github.workspace}}/build

      - name: Install
        working-directory: ${{github.workspace}}/build
        run: cmake --install .

      - name: Create AppImage
        working-directory: ${{github.workspace}}
        run: |
          ${{github.workspace}}/linuxdeploy-x86_64.AppImage \
            --appdir ${{github.workspace}}/build/install \
            --plugin qt \
            --output appimage

      - name: Upload AppImage
        uses: actions/upload-artifact@v4
        with:
          name: AppImage
          path: ${{github.workspace}}/*.AppImage
