name: Manual Clang Build and Cache for Windows

on:
  workflow_dispatch:
    inputs:
      clang_version:
        description: 'Clang version to build'
        required: false
        default: '19.1.7'

env:
  CLANG_VERSION: ${{ github.event.inputs.clang_version || '19.1.7' }}
  INSTALL_DIR: ${{ github.workspace }}/clang-install
  environment_script: "C:/Program Files/Microsoft Visual Studio/2022/Enterprise/VC/Auxiliary/Build/vcvars64.bat"

jobs:
  build-clang-windows:
    runs-on: windows-latest
    environment: "C:/Program Files/Microsoft Visual Studio/2022/Enterprise/VC/Auxiliary/Build/vcvars64.bat"
    defaults:
      run:
        shell: cmd
    steps:
      - name: Clone LLVM project
        run: |
          git clone https://github.com/llvm/llvm-project.git
          cd llvm-project
          git checkout tags/llvmorg-${{ env.CLANG_VERSION }}

      - name: Configure CMake
        working-directory: llvm-project
        run: |
          call "${{ env.environment_script }}"
          cmake -S llvm -B build ^
            -G Ninja ^
            -DCMAKE_BUILD_TYPE=Release ^
            -DCMAKE_INSTALL_PREFIX=${{ env.INSTALL_DIR }} ^
            -DLLVM_ENABLE_PROJECTS:STRING=clang ^
            -DLLVM_ENABLE_RTTI:BOOL=ON ^
            -DLLVM_TARGETS_TO_BUILD=host

      - name: Build Clang
        working-directory: llvm-project/build
        run: |
          ninja

      - name: Install Clang
        working-directory: llvm-project/build
        run: |
          ninja install

      - name: Compress Clang Installation
        run: |
          tar -czvf clang-${{ env.CLANG_VERSION }}-windows.tar.gz -C ${{ env.INSTALL_DIR }} .

      - name: Upload Clang Artifact
        uses: actions/upload-artifact@v4
        with:
          name: clang-${{ env.CLANG_VERSION }}-windows
          path: clang-${{ env.CLANG_VERSION }}-windows.tar.gz

      - name: Cleanup
        run: |
          rm -rf llvm-project
