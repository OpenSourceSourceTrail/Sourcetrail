name: Manual Clang Build and Cache for Windows

on:
  workflow_dispatch:
    inputs:
      clang_version:
        description: 'Clang version to build'
        required: false
        default: '19.1.7'

env:
  CLANG_VERSION: ${{ github.event.inputs.clang_version || '19.1.7' }}
  INSTALL_DIR: ${{ github.workspace }}\clang-install

jobs:
  build-clang-windows:
    runs-on: windows-latest
    steps:
      - name: Setup MSVC Environment
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64

      - name: Install Ninja
        run: |
          choco install ninja -y
          ninja --version

      - name: Clone LLVM project
        run: |
          git clone --depth 1 --branch llvmorg-${{ env.CLANG_VERSION }} https://github.com/llvm/llvm-project.git

      - name: Configure CMake
        working-directory: llvm-project
        run: |
          cmake -S llvm -B build ^
            -G Ninja ^
            -DCMAKE_BUILD_TYPE=Release ^
            -DCMAKE_INSTALL_PREFIX=${{ env.INSTALL_DIR }} ^
            -DLLVM_ENABLE_PROJECTS=clang ^
            -DLLVM_ENABLE_RTTI=ON ^
            -DLLVM_TARGETS_TO_BUILD=X86 ^
            -DLLVM_INCLUDE_TESTS=OFF ^
            -DLLVM_INCLUDE_EXAMPLES=OFF ^
            -DLLVM_INCLUDE_BENCHMARKS=OFF

      - name: Build Clang
        working-directory: llvm-project/build
        run: ninja clang

      - name: Install Clang
        working-directory: llvm-project/build
        run: ninja install

      - name: Compress Clang Installation
        shell: pwsh
        run: |
          Compress-Archive -Path "${{ env.INSTALL_DIR }}\*" -DestinationPath "clang-${{ env.CLANG_VERSION }}-windows.zip"

      - name: Upload Clang Artifact
        uses: actions/upload-artifact@v4
        with:
          name: clang-${{ env.CLANG_VERSION }}-windows
          path: clang-${{ env.CLANG_VERSION }}-windows.zip
          retention-days: 7

      - name: Cleanup
        shell: pwsh
        run: |
          Remove-Item -Recurse -Force llvm-project -ErrorAction SilentlyContinue
